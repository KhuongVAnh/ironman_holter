const { AccessPermission, User, MedicalHistory } = require("../models")

// üìå L·∫•y danh s√°ch b·ªánh nh√¢n m√† b√°c sƒ© ƒë∆∞·ª£c ph√©p xem
exports.getAccessiblePatients = async (req, res) => {
    try {
        const viewer_id = req.params.viewer_id

        const AccessPermissions = await AccessPermission.findAll({
            where: { viewer_id, status: "accepted" },
            include: [
                {
                    model: User,
                    as: "patient",
                    attributes: ["user_id", "name", "email"],
                },
            ],
        })

        return res.status(200).json(AccessPermissions)
    } catch (err) {
        console.error("L·ªói getAccessiblePatients:", err)
        res.status(500).json({ error: "L·ªói khi l·∫•y danh s√°ch b·ªánh nh√¢n" })
    }
}

// üìå L·∫•y b·ªánh s·ª≠ c·ªßa m·ªôt b·ªánh nh√¢n c·ª• th·ªÉ
exports.getPatientHistory = async (req, res) => {
    try {
        const { patient_id } = req.params;

        const histories = await MedicalHistory.findAll({
            where: { user_id: patient_id },
            include: [
                { model: User, as: "doctor", attributes: ["user_id", "name", "email"] }, // ‚úÖ alias ph·∫£i tr√πng v·ªõi model
            ],
            order: [["created_at", "DESC"]],
        });

        return res.status(200).json(histories);
    } catch (err) {
        console.error("L·ªói getPatientHistory:", err);
        res.status(500).json({ error: "Kh√¥ng th·ªÉ t·∫£i b·ªánh s·ª≠" });
    }
};
